#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

# Clean up leaking environment
unset GIT_DIR

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
VENDOR_DIR="$BUILD_DIR/vendor/deployer"
BIN_DIR="$BUILD_DIR/vendor/bin"

mkdir -p $VENDOR_DIR
mkdir -p $CACHE_DIR
mkdir -p $BIN_DIR

# Required dependencies for the deployer itself

if [ -d "$CACHE_DIR/heroku-client" ]; then
  echo "-----> Using cached Heroku Client."
else
  echo "-----> Installing Heroku Client...."
  curl -s https://s3.amazonaws.com/assets.heroku.com/heroku-client/heroku-client.tgz | tar xz
  mv heroku-client $CACHE_DIR
fi
cp -R $CACHE_DIR/heroku-client $VENDOR_DIR

touch $CACHE_DIR/goversion
EXISTING_GO_VERSION=$(cat $CACHE_DIR/goversion)
REQUIRED_GO_VERSION=$(cat $ENV_DIR/GO_VERSION)

if [ "$EXISTING_GO_VERSION" == "$REQUIRED_GO_VERSION" ]; then
  echo "-----> Using cached go installation."
else
  echo "-----> Installing go...."
  rm -rf $CACHE_DIR/go $VENDOR_DIR/go
  curl -s https://storage.googleapis.com/golang/go${REQUIRED_GO_VERSION}.linux-amd64.tar.gz | tar xz
  mv go $CACHE_DIR
  echo "$REQUIRED_GO_VERSION" > $CACHE_DIR/goversion
fi
cp -R $CACHE_DIR/go $VENDOR_DIR

if [ -f "$CACHE_DIR/sassc" ]; then
  echo "-----> Using cached sassc binary."
else
  echo "-----> Installing sassc...."
  wget https://s3.amazonaws.com/tm-vendor/sassc
  mv sassc $CACHE_DIR
  chmod +x $CACHE_DIR/sassc
fi
cp $CACHE_DIR/sassc $BIN_DIR/sassc

# Required dependencies for themuse (may need to move this somewhere else later)
mkdir -p $VENDOR_DIR/go-deps

export GOROOT=$VENDOR_DIR/go
export GOPATH=$VENDOR_DIR/go-deps
export PATH=$GOROOT/bin:$PATH

if [ -d "$CACHE_DIR/go-deps" ]; then
  echo "-----> Using cached go dependencies."
  cp -R $CACHE_DIR/go-deps $VENDOR_DIR
else
  echo "-----> Installing gosass...."
  go get github.com/dailymuse/gosass
  cp -R $VENDOR_DIR/go-deps $CACHE_DIR
fi


# Add python 2 wrapper so older library compiles work
printf '#!/usr/bin/env bash\n\nPYTHONHOME=/usr\n\n/usr/bin/python2.7 "$@"\n' | tee $BIN_DIR/python2.7 $BIN_DIR/python2
chmod +x $BIN_DIR/python2.7 $BIN_DIR/python2

# Ensure we have themuse-machine ssh key available at runtime


# Update environment variables that are sourced at dyno startup
# Also, we have themuse-machine ssh key available at runtime
mkdir -p "$BUILD_DIR"/.profile.d
cat <<EOF >"$BUILD_DIR"/.profile.d/deployer.sh
export PATH=/app/vendor/bin:/app/vendor/deployer/heroku-client/bin:/app/vendor/deployer/go/bin:/app/vendor/deployer/go-deps/bin:$PATH
export GOROOT=/app/vendor/deployer/go
export GOPATH=/app/vendor/deployer/go-deps
mkdir -p \$HOME/.ssh
echo "\$SSH_KEY" > \$HOME/.ssh/id_rsa
ssh -oStrictHostKeyChecking=no -T git@github.com 2>&1
EOF

echo "-----> I'm done, buddy."
